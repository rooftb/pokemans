[{"/Users/tanner/Documents/GitHub/pokemon/src/index.js":"1","/Users/tanner/Documents/GitHub/pokemon/src/App.js":"2","/Users/tanner/Documents/GitHub/pokemon/src/reportWebVitals.js":"3","/Users/tanner/Documents/GitHub/pokemon/src/Pokemon.js":"4","/Users/tanner/Documents/GitHub/pokemon/src/PokemonData.js":"5","/Users/tanner/Documents/GitHub/pokemon/src/Navbar.js":"6","/Users/tanner/Documents/GitHub/pokemon/src/AppContext.js":"7","/Users/tanner/Documents/GitHub/pokemon/src/Loader.js":"8"},{"size":500,"mtime":1611071456272,"results":"9","hashOfConfig":"10"},{"size":433,"mtime":1611261661393,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1611071456272,"results":"12","hashOfConfig":"10"},{"size":3107,"mtime":1611259426566,"results":"13","hashOfConfig":"10"},{"size":1063,"mtime":1611259364355,"results":"14","hashOfConfig":"10"},{"size":922,"mtime":1611154225208,"results":"15","hashOfConfig":"10"},{"size":621,"mtime":1611256184528,"results":"16","hashOfConfig":"10"},{"size":179,"mtime":1611156671989,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"zlim74",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/tanner/Documents/GitHub/pokemon/src/index.js",[],["38","39"],"/Users/tanner/Documents/GitHub/pokemon/src/App.js",[],"/Users/tanner/Documents/GitHub/pokemon/src/reportWebVitals.js",[],"/Users/tanner/Documents/GitHub/pokemon/src/Pokemon.js",["40","41","42","43","44","45","46"],"import React, { useEffect, useState, useContext } from 'react';\nimport {\n  Card,\n  CardHeader,\n  CardTitle,\n  CardImg,\n  CardBody,\n  CardFooter,\n  Button,\n  Modal,\n  ModalBody,\n  ModalHeader,\n} from 'shards-react';\nimport { AppContext, AppProvider } from './AppContext';\n\nexport default function Pokemon(props) {\n  const context = useContext(AppContext);\n\n  const { details } = props;\n\n  const [stats, setStats] = useState();\n  const [modal, setModal] = useState(false);\n  const [data, setData] = useState();\n\n  const name = details.name.charAt(0).toUpperCase() + details.name.slice(1);\n\n  const realFeet = (stats.height * 0.328084).toFixed(2);\n\n  const feet = Math.floor(realFeet);\n  const inches = Math.round((realFeet - feet) * 12);\n\n  useEffect(() => {\n    fetch(details.url)\n      .then((res) => res.json())\n      .then((data) => {\n        setStats(data);\n      })\n      .catch((err) => console.log(err));\n  }, [details.url]);\n\n  function toggleModal() {\n    setModal(!modal);\n    fetch(stats.species.url)\n      .then((res) => res.json())\n      .then((data) => setData(data));\n  }\n\n  if (!stats || !data) {\n    return null;\n  }\n\n  return (\n    <div key={details.id}>\n      <Modal open={modal} toggle={toggleModal}>\n        <ModalHeader className='row d-flex justify-content-between'>\n          <span\n            className='mr-3'\n            style={{\n              fontSize: '1rem',\n              fontWeight: '300',\n              color: '#5a6169',\n            }}\n          >\n            No. {stats.id}{' '}\n          </span>\n          {name}\n        </ModalHeader>\n        <ModalBody>\n          <div className='row justify-content-around'>\n            <img\n              className='col-md'\n              style={{ height: '250px', maxWidth: '200px' }}\n              // prettier-ignore\n              src={stats.sprites.other.dream_world.front_default}\n            />\n            <div className='col-md'>\n              {stats.types[0].type.name}\n              {stats.types[1] && <span> / {stats.types[1].type.name}</span>}\n              {stats.height && (\n                <p>\n                  {feet}' {inches}''\n                </p>\n              )}\n              {data && (\n                <p className='mt-2'>\n                  {data.flavor_text_entries[0].flavor_text}\n                </p>\n              )}\n            </div>\n          </div>\n        </ModalBody>\n      </Modal>\n      <Card\n        onClick={toggleModal}\n        style={{\n          width: '190px',\n          maxHeight: '292px',\n          cursor: 'pointer',\n        }}\n        className='my-2 mx-2 p-3'\n      >\n        {stats && <CardImg top src={stats.sprites.front_default} alt={name} />}\n        {stats && (\n          <>\n            <div className='d-flex justify-content-between'>\n              <span>{stats.id}</span>\n              <CardTitle className='mx-auto fixed'>{name}</CardTitle>\n            </div>\n            <div>\n              <span>{stats.types[0].type.name}</span>\n              {stats.types[1] && <span> / {stats.types[1].type.name}</span>}\n            </div>\n          </>\n        )}\n      </Card>\n    </div>\n  );\n}\n","/Users/tanner/Documents/GitHub/pokemon/src/PokemonData.js",["47","48","49","50"],"import React, { useEffect, useState, useContext } from 'react';\nimport Pokemon from './Pokemon.js';\nimport Loader from './Loader';\nimport { AppContext, AppProvider } from './AppContext';\n\nexport default function Pokemen() {\n  const [pokemonData, setPokemonData] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n\n  const context = useContext(AppContext);\n\n  let nums = context.nums.split(',');\n\n  useEffect(() => {\n    fetch(\n      `https://pokeapi.co/api/v2/pokemon?limit=${nums[0]}?&offset=${nums[1]}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        setPokemonData(data.results);\n        setLoading(!loading);\n      })\n      .catch((err) => {\n        setError(err);\n        setLoading(!loading);\n      });\n  }, [context]);\n\n  return (\n    <div className='d-flex justify-content-center align-items-center align-content-between flex-wrap'>\n      {pokemonData &&\n        pokemonData.map((pokemon) => (\n          <Pokemon key={pokemon.id} details={pokemon} />\n        ))}\n    </div>\n  );\n}\n","/Users/tanner/Documents/GitHub/pokemon/src/Navbar.js",["51","52","53","54","55","56","57","58","59","60","61","62","63","64"],"import React, { useState, useContext } from 'react';\nimport {\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormInput,\n  Collapse,\n} from 'shards-react';\nimport { AppContext, AppProvider } from './AppContext';\n\nexport default function NavBar(props) {\n  const context = useContext(AppContext);\n\n  return (\n    <Navbar\n      className='mb-2 d-flex align-self-center'\n      type='light'\n      theme='light'\n      expand='md'\n    >\n      <NavbarBrand href='#'>Pok√©dex</NavbarBrand>\n      <Nav>\n        <select onChange={(e) => context.toggleNums(e)}>\n          <option value={[151, 0]}>Gen I. 1-151</option>\n          <option value={[100, 151]}>Gen II. 152-251</option>\n          <option value={[135, 251]}>Gen III. 252-386</option>\n        </select>\n      </Nav>\n    </Navbar>\n  );\n}\n","/Users/tanner/Documents/GitHub/pokemon/src/AppContext.js",[],"/Users/tanner/Documents/GitHub/pokemon/src/Loader.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":4,"column":3,"nodeType":"71","messageId":"72","endLine":4,"endColumn":13},{"ruleId":"69","severity":1,"message":"73","line":7,"column":3,"nodeType":"71","messageId":"72","endLine":7,"endColumn":11},{"ruleId":"69","severity":1,"message":"74","line":8,"column":3,"nodeType":"71","messageId":"72","endLine":8,"endColumn":13},{"ruleId":"69","severity":1,"message":"75","line":9,"column":3,"nodeType":"71","messageId":"72","endLine":9,"endColumn":9},{"ruleId":"69","severity":1,"message":"76","line":14,"column":22,"nodeType":"71","messageId":"72","endLine":14,"endColumn":33},{"ruleId":"69","severity":1,"message":"77","line":17,"column":9,"nodeType":"71","messageId":"72","endLine":17,"endColumn":16},{"ruleId":"78","severity":1,"message":"79","line":70,"column":13,"nodeType":"80","endLine":75,"endColumn":15},{"ruleId":"69","severity":1,"message":"81","line":3,"column":8,"nodeType":"71","messageId":"72","endLine":3,"endColumn":14},{"ruleId":"69","severity":1,"message":"76","line":4,"column":22,"nodeType":"71","messageId":"72","endLine":4,"endColumn":33},{"ruleId":"69","severity":1,"message":"82","line":9,"column":10,"nodeType":"71","messageId":"72","endLine":9,"endColumn":15},{"ruleId":"83","severity":1,"message":"84","line":28,"column":6,"nodeType":"85","endLine":28,"endColumn":15,"suggestions":"86"},{"ruleId":"69","severity":1,"message":"87","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"88","line":4,"column":3,"nodeType":"71","messageId":"72","endLine":4,"endColumn":16},{"ruleId":"69","severity":1,"message":"89","line":7,"column":3,"nodeType":"71","messageId":"72","endLine":7,"endColumn":10},{"ruleId":"69","severity":1,"message":"90","line":8,"column":3,"nodeType":"71","messageId":"72","endLine":8,"endColumn":10},{"ruleId":"69","severity":1,"message":"91","line":9,"column":3,"nodeType":"71","messageId":"72","endLine":9,"endColumn":11},{"ruleId":"69","severity":1,"message":"92","line":10,"column":3,"nodeType":"71","messageId":"72","endLine":10,"endColumn":17},{"ruleId":"69","severity":1,"message":"93","line":11,"column":3,"nodeType":"71","messageId":"72","endLine":11,"endColumn":15},{"ruleId":"69","severity":1,"message":"94","line":12,"column":3,"nodeType":"71","messageId":"72","endLine":12,"endColumn":15},{"ruleId":"69","severity":1,"message":"95","line":13,"column":3,"nodeType":"71","messageId":"72","endLine":13,"endColumn":13},{"ruleId":"69","severity":1,"message":"96","line":14,"column":3,"nodeType":"71","messageId":"72","endLine":14,"endColumn":18},{"ruleId":"69","severity":1,"message":"97","line":15,"column":3,"nodeType":"71","messageId":"72","endLine":15,"endColumn":17},{"ruleId":"69","severity":1,"message":"98","line":16,"column":3,"nodeType":"71","messageId":"72","endLine":16,"endColumn":12},{"ruleId":"69","severity":1,"message":"99","line":17,"column":3,"nodeType":"71","messageId":"72","endLine":17,"endColumn":11},{"ruleId":"69","severity":1,"message":"76","line":19,"column":22,"nodeType":"71","messageId":"72","endLine":19,"endColumn":33},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'CardHeader' is defined but never used.","Identifier","unusedVar","'CardBody' is defined but never used.","'CardFooter' is defined but never used.","'Button' is defined but never used.","'AppProvider' is defined but never used.","'context' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Loader' is defined but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loading' and 'nums'. Either include them or remove the dependency array. You can also do a functional update 'setLoading(l => ...)' if you only need 'loading' in the 'setLoading' call.","ArrayExpression",["102"],"'useState' is defined but never used.","'NavbarToggler' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'Dropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'InputGroup' is defined but never used.","'InputGroupAddon' is defined but never used.","'InputGroupText' is defined but never used.","'FormInput' is defined but never used.","'Collapse' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},"Update the dependencies array to be: [context, loading, nums]",{"range":"105","text":"106"},[788,797],"[context, loading, nums]"]